name: WordPress Tests

# Run on push
on:
  push:
    # any branch
    branches:
      - '*'
      # If files matching these patterns have changed
    paths:
      - 'composer.json'
      - '**.php'
      - readme.txt
      - .github/workflows/wordpress.yml

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # PHP Versions to test
        php-version: [ "7.2", "7.3","7.4", "8.0", "8.1", "8.2" ]
        # WordPress versions to test
        wp-version: [ "latest" ]
        # Allow all tests to run, even if one fails
      ## https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstrategyfail-fast
      fail-fast: false

    steps:

      # Set up plugin
      - name: Checkout
        uses: actions/checkout@v1

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose -y

      - name: Docker Compose Version
        run: docker-compose -v

      ## PHP
      - name: Install PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php-version }}
      - name: PHP Version
        run: php -v

      ## Composer
      - name: Get Composer Cache Directory
        id: get-composer-cache-dir # Instead of composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-version }}-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress

      # Run integration tests
      - name: Make envfile
        #https://github.com/marketplace/actions/create-env-file
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_NGROK_AUTH_TOKEN: ${secrets.NGROK_AUTH_TOKEN}
          envkey_WORDPRESS_VERSION: ${{ matrix.wp-version }}
          envkey_PHP_IMAGE_TAG: ${{ matrix.php-version }}
          envkey_TL_VENDOR_ENCRYTPTION_KEY: ${{ secrets.TL_VENDOR_ENCRYTPTION_KEY }}
      - name: Tests
        env:
          WORDPRESS_VERSION: ${{ matrix.wp-version }}
          PHP_IMAGE_TAG: ${{ matrix.php-version }}
        run: docker-compose run phpunit phpunit --config=./phpunit-integration.xml
